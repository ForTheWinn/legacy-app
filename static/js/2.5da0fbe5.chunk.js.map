{"version":3,"sources":["packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/saved-wallets/components/form.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/import-file/components/import-button/index.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/saved-wallets/index.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/import-file/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","formik__WEBPACK_IMPORTED_MODULE_1__","_components_password_input__WEBPACK_IMPORTED_MODULE_2__","_components_display_error__WEBPACK_IMPORTED_MODULE_3__","Form","props","savedWallets","isSubmitting","values","setFieldValue","submitForm","status","setStatus","a","createElement","className","onBlur","e","target","value","map","item","address","key","encryptedKey","onKeyDown","password","onChange","val","error","message","onClose","undefined","disabled","type","concat","ImportButton","_ref","onImport","_useState","useState","_useState2","Object","_Users_ed_Projects_legacy_n2_ftw_repos_ftw_lotto_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setError","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","_components_display_error__WEBPACK_IMPORTED_MODULE_2__","files","length","reader","FileReader","onload","event","jsonObj","JSON","parse","result","accounts","wallets","acc","readAsText","accept","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0__","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0___default","_components_form__WEBPACK_IMPORTED_MODULE_2__","yup__WEBPACK_IMPORTED_MODULE_3__","ValidateSchema","Yup","shape","required","SavedWallets","withFormik","mapPropsToValues","validationSchema","handleSubmit","setSubmitting","Neon","create","account","decrypt","then","onConnected","provider","privateKey","encrypted","catch","ImportFile","setWallets","_saved_wallets__WEBPACK_IMPORTED_MODULE_3__","_components_import_button__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"static/js/2.5da0fbe5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form as FormikForm, FormikProps } from \"formik\";\nimport { Nep2States } from \"../../import-nep2\";\nimport PasswordInput from \"../../../components/password-input\";\nimport DisplayError from \"../../../components/display-error\";\nimport { StoredWalletProps } from \"../../../../../../../../types\";\n\nconst Form = (\n  props: { savedWallets: StoredWalletProps[] } & FormikProps<Nep2States>\n) => {\n  const {\n    savedWallets,\n    isSubmitting,\n    values,\n    setFieldValue,\n    submitForm,\n    status,\n    setStatus,\n  } = props;\n  return (\n    <FormikForm>\n      <div className=\"field\">\n        <div className=\"label\">Saved wallets</div>\n        <div className=\"control\">\n          <div className=\"select is-fullwidth\">\n            <select onBlur={e => setFieldValue(\"encryptedKey\", e.target.value)}>\n              {savedWallets.map(item => {\n                if (item && item.address) {\n                  return (\n                    <option key={item.address} value={item.encryptedKey}>\n                      {item.address}\n                    </option>\n                  );\n                }\n                return false;\n              })}\n            </select>\n          </div>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"label\">Password</div>\n        <PasswordInput\n          onKeyDown={submitForm}\n          value={values.password}\n          onChange={val => setFieldValue(\"password\", val)}\n        />\n      </div>\n      {status && status.error && (\n        <DisplayError\n          message={status.error}\n          onClose={() => setStatus(undefined)}\n        />\n      )}\n      <button\n        disabled={!values.password}\n        type=\"submit\"\n        className={`button is-primary ${isSubmitting ? \"is-loading\" : \"\"}`}\n      >\n        Open\n      </button>\n    </FormikForm>\n  );\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport DisplayError from \"../../../../components/display-error\";\n\ninterface WalletProps {\n  encryptedKey: string;\n  address: string;\n}\n\ninterface Nep6 {\n  address: string;\n  label: string;\n  isDefault: boolean;\n  lock: boolean;\n  key: string;\n  contract: {};\n  \"extra?\": boolean;\n}\n\ninterface ImportButtonProps {\n  onImport: (wallets: WalletProps[]) => void;\n}\n\nconst ImportButton = ({ onImport }: ImportButtonProps) => {\n  const [error, setError] = useState(\"\");\n  const handleImport = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length) {\n      try {\n        // eslint-disable-next-line no-undef\n        const reader = new FileReader();\n        reader.onload = (event: any) => {\n          const jsonObj = JSON.parse(event.target.result);\n          if (jsonObj.accounts && jsonObj.accounts.length) {\n            const wallets = jsonObj.accounts.map((acc: Nep6) => {\n              return {\n                address: acc.address,\n                encryptedKey: acc.key,\n              };\n            });\n            onImport(wallets);\n          } else {\n            setError(\"Cannot find account in the file\");\n          }\n        };\n        reader.readAsText(e.target.files[0]);\n        return false;\n      } catch (e) {\n        setError(e.message);\n      }\n    }\n  };\n  return (\n    <>\n      {error && <DisplayError message={error} onClose={() => setError(\"\")} />}\n      <div className=\"file\">\n        <label className=\"file-label\">\n          <input\n            onChange={handleImport}\n            className=\"file-input\"\n            type=\"file\"\n            accept=\".json,application/json\"\n          />\n          <span className=\"file-cta button is-primary\">\n            <span className=\"file-label\">Select wallet file</span>\n          </span>\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default ImportButton;\n","import Neon from \"@cityofzion/neon-js\";\nimport { withFormik } from \"formik\";\nimport Form from \"./components/form\";\nimport * as Yup from \"yup\";\nimport { Nep2States } from \"../import-nep2\";\nimport {\n  CurrentWalletProps,\n  StoredWalletProps,\n} from \"../../../../../../../types\";\n\nconst ValidateSchema = Yup.object().shape({\n  password: Yup.string().required(\"Required\"),\n});\n\nconst SavedWallets = withFormik<\n  {\n    savedWallets: StoredWalletProps[];\n    onConnected: (wallet: CurrentWalletProps) => void;\n  },\n  Nep2States\n>({\n  mapPropsToValues: (props: any) => {\n    return {\n      encryptedKey:\n        props.savedWallets && props.savedWallets.length > 0\n          ? props.savedWallets[0].encryptedKey\n          : \"\",\n      password: \"\",\n    };\n  },\n  validationSchema: ValidateSchema,\n  handleSubmit: (values: Nep2States, { props, setSubmitting, setStatus }) => {\n    const account = Neon.create.account(values.encryptedKey);\n    account\n      .decrypt(values.password)\n      .then(account => {\n        setSubmitting(false);\n        props.onConnected({\n          provider: \"LOCAL\",\n          address: account.address,\n          privateKey: account.privateKey,\n          encryptedKey: account.encrypted,\n        });\n      })\n      .catch(e => {\n        setSubmitting(false);\n        setStatus({ error: e.message });\n      });\n  },\n})(Form);\n\nexport default SavedWallets;\n","import React, { useState } from \"react\";\nimport ImportButton from \"./components/import-button\";\nimport SavedWallets from \"../saved-wallets\";\nimport {\n  CurrentWalletProps,\n  StoredWalletProps,\n} from \"../../../../../../../types\";\n\ninterface ImportFileProps {\n  onConnected: (account: CurrentWalletProps) => void;\n}\n\nconst ImportFile = (props: ImportFileProps) => {\n  const { onConnected } = props;\n  const [wallets, setWallets] = useState<StoredWalletProps[]>([]);\n\n  return (\n    <>\n      {wallets && wallets.length ? (\n        <SavedWallets onConnected={onConnected} savedWallets={wallets} />\n      ) : (\n        <ImportButton onImport={setWallets} />\n      )}\n    </>\n  );\n};\n\nexport default ImportFile;\n"],"sourceRoot":""}