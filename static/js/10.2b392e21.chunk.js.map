{"version":3,"sources":["packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/create-wallet/components/backup.tsx"],"names":["BackupKeys","props","_useState","useState","_useState2","Object","_Users_ed_Projects_legacy_n2_ftw_repos_ftw_lotto_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isAgreed","setAgreement","account","onConnected","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","wordBreak","password","address","encryptedKey","privateKey","type","checked","onChange","disabled","onClick","provider"],"mappings":"6HA0DeA,UA7CI,SAACC,GAA2B,IAAAC,EACZC,oBAAS,GADGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtCK,EADsCH,EAAA,GAC5BI,EAD4BJ,EAAA,GAErCK,EAAyBR,EAAzBQ,QAASC,EAAgBT,EAAhBS,YACjB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAf,wFAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,MAAO,CAAEC,UAAW,cAC3CL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBAAeJ,EAAQQ,UACvBN,EAAAC,EAAAC,cAAA,6BAAqBJ,EAAQS,SAC7BP,EAAAC,EAAAC,cAAA,4BAAoBJ,EAAQU,cAC5BR,EAAAC,EAAAC,cAAA,0BAAkBJ,EAAQW,cAG9BT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YACfH,EAAAC,EAAAC,cAAA,SACEQ,KAAK,WACLC,QAASf,EACTgB,SAAU,kBAAMf,GAAcD,MAJlC,iCAQAI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEW,UAAWjB,EACXO,UAAU,oBACVW,QAAS,kBACPf,EAAY,CACVgB,SAAU,QACVR,QAAST,EAAQS,QACjBC,aAAcV,EAAQU,aACtBC,WAAYX,EAAQW,eAR1B","file":"static/js/10.2b392e21.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { CurrentWalletProps } from \"../../../../../../../../types\";\n\ninterface BackupKeysProps {\n  account: {\n    password: string;\n    address: string;\n    encryptedKey: string;\n    privateKey: string;\n  };\n  onConnected: (account: CurrentWalletProps) => void;\n}\n\nconst BackupKeys = (props: BackupKeysProps) => {\n  const [isAgreed, setAgreement] = useState(false);\n  const { account, onConnected } = props;\n  return (\n    <div>\n      <div className=\"notification is-info\">\n        You must save and backup the keys. If you lose them, you lose access to\n        your assets.\n      </div>\n      <div className=\"content\" style={{ wordBreak: \"break-all\" }}>\n        <ul>\n          <li>Password: {account.password}</li>\n          <li>Wallet address: {account.address}</li>\n          <li>Encrypted key: {account.encryptedKey}</li>\n          <li>Private key: {account.privateKey}</li>\n        </ul>\n      </div>\n      <hr />\n      <label className=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={isAgreed}\n          onChange={() => setAgreement(!isAgreed)}\n        />\n        &nbsp;&nbsp;I have saved the keys\n      </label>\n      <hr />\n      <button\n        disabled={!isAgreed}\n        className=\"button is-primary\"\n        onClick={() =>\n          onConnected({\n            provider: \"LOCAL\",\n            address: account.address,\n            encryptedKey: account.encryptedKey,\n            privateKey: account.privateKey,\n          })\n        }\n      >\n        Open wallet\n      </button>\n    </div>\n  );\n};\n\nexport default BackupKeys;\n"],"sourceRoot":""}