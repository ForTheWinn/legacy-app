{"version":3,"sources":["packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/saved-wallets/components/form.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","formik__WEBPACK_IMPORTED_MODULE_1__","_components_password_input__WEBPACK_IMPORTED_MODULE_2__","_components_display_error__WEBPACK_IMPORTED_MODULE_3__","Form","props","savedWallets","isSubmitting","values","setFieldValue","submitForm","status","setStatus","a","createElement","className","onBlur","e","target","value","map","item","address","key","encryptedKey","onKeyDown","password","onChange","val","error","message","onClose","undefined","disabled","type","concat"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAiEeS,UA1DF,SACXC,GACG,IAEDC,EAOED,EAPFC,aACAC,EAMEF,EANFE,aACAC,EAKEH,EALFG,OACAC,EAIEJ,EAJFI,cACAC,EAGEL,EAHFK,WACAC,EAEEN,EAFFM,OACAC,EACEP,EADFO,UAEF,OACEb,EAAAc,EAAAC,cAACb,EAAA,EAAD,KACEF,EAAAc,EAAAC,cAAA,OAAKC,UAAU,SACbhB,EAAAc,EAAAC,cAAA,OAAKC,UAAU,SAAf,iBACAhB,EAAAc,EAAAC,cAAA,OAAKC,UAAU,WACbhB,EAAAc,EAAAC,cAAA,OAAKC,UAAU,uBACbhB,EAAAc,EAAAC,cAAA,UAAQE,OAAQ,SAAAC,GAAC,OAAIR,EAAc,eAAgBQ,EAAEC,OAAOC,SACzDb,EAAac,IAAI,SAAAC,GAChB,SAAIA,IAAQA,EAAKC,UAEbvB,EAAAc,EAAAC,cAAA,UAAQS,IAAKF,EAAKC,QAASH,MAAOE,EAAKG,cACpCH,EAAKC,eAUtBvB,EAAAc,EAAAC,cAAA,OAAKC,UAAU,SACbhB,EAAAc,EAAAC,cAAA,OAAKC,UAAU,SAAf,YACAhB,EAAAc,EAAAC,cAACZ,EAAA,QAAD,CACEuB,UAAWf,EACXS,MAAOX,EAAOkB,SACdC,SAAU,SAAAC,GAAG,OAAInB,EAAc,WAAYmB,OAG9CjB,GAAUA,EAAOkB,OAChB9B,EAAAc,EAAAC,cAACX,EAAA,QAAD,CACE2B,QAASnB,EAAOkB,MAChBE,QAAS,kBAAMnB,OAAUoB,MAG7BjC,EAAAc,EAAAC,cAAA,UACEmB,UAAWzB,EAAOkB,SAClBQ,KAAK,SACLnB,UAAS,qBAAAoB,OAAuB5B,EAAe,aAAe,KAHhE","file":"static/js/12.fe532957.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form as FormikForm, FormikProps } from \"formik\";\nimport { Nep2States } from \"../../import-nep2\";\nimport PasswordInput from \"../../../components/password-input\";\nimport DisplayError from \"../../../components/display-error\";\nimport { StoredWalletProps } from \"../../../../../../../../types\";\n\nconst Form = (\n  props: { savedWallets: StoredWalletProps[] } & FormikProps<Nep2States>\n) => {\n  const {\n    savedWallets,\n    isSubmitting,\n    values,\n    setFieldValue,\n    submitForm,\n    status,\n    setStatus,\n  } = props;\n  return (\n    <FormikForm>\n      <div className=\"field\">\n        <div className=\"label\">Saved wallets</div>\n        <div className=\"control\">\n          <div className=\"select is-fullwidth\">\n            <select onBlur={e => setFieldValue(\"encryptedKey\", e.target.value)}>\n              {savedWallets.map(item => {\n                if (item && item.address) {\n                  return (\n                    <option key={item.address} value={item.encryptedKey}>\n                      {item.address}\n                    </option>\n                  );\n                }\n                return false;\n              })}\n            </select>\n          </div>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"label\">Password</div>\n        <PasswordInput\n          onKeyDown={submitForm}\n          value={values.password}\n          onChange={val => setFieldValue(\"password\", val)}\n        />\n      </div>\n      {status && status.error && (\n        <DisplayError\n          message={status.error}\n          onClose={() => setStatus(undefined)}\n        />\n      )}\n      <button\n        disabled={!values.password}\n        type=\"submit\"\n        className={`button is-primary ${isSubmitting ? \"is-loading\" : \"\"}`}\n      >\n        Open\n      </button>\n    </FormikForm>\n  );\n};\n\nexport default Form;\n"],"sourceRoot":""}